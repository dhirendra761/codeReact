
#### FILE TRANSFERS DASHBOARD MACROS ####

##GETTING NATCO SERVER###
# Type : Front
# Status : OK
# Description : Provides all the status of natco available in AMS Servers
# @arg : none
# @field : multiple
[x620_ams_get_status]
definition = search eventtype=x620_ams_natco \
| rex field=_raw "Try upload file :\s+Upload File (?<file>.*?)\s+(?<msg>\w+,[^.]+\.)\s+Closing log at (?<time>\d+:\d+:\d+\s+\w+) on (?<date>\d+\/\d+\/\d+)" \
| rex field=_raw "Try upload file : (?<file>.*)\n(?<msg>.*)\n([\S\s]*)\nClosing log at (?<time>.*) on (?<date>.*)" \
| rex field=_raw "Try upload file : (?<file>.*)\nErr : (?<msg>.*)\n([\S\s]*)\nClosing log at (?<time>.*) on (?<date>.*)" \
| rex field=_raw "Try to connect.\nErr : (?<msg>.*)\n([\S\s]*)\nClosing log at (?<time>.*) on (?<date>.*)" \
| rex field=_raw "Latest SAP generated file : (?<file>.*)\nTry download file.\nDownload (?<msg>.*).\nClosing log at (?<time>.*) on (?<date>.*)" \
| rex field=_raw "Warning : (?<msg>.*).\nClosing log at (?<time>.*) on (?<date>.*)" \
| stats first(msg) as Message first(time) as Time values(date) as Date values(file) as File by source sourcetype \
| eval natco=case(sourcetype="x620:ams:natco_fr","AMS FR",sourcetype="x620:ams:natco_ge","AMS GE",sourcetype="x620:ams:natco_uk","AMS UK",sourcetype="x620:ams:natco_sp","AMS SP") \
| rex field=source "\\\(?<filename>.*)_(?<log_filename_date>.*)\." \
| rex field=source ".*\\\(?<filename>.*)_(?<log_filename_date>\w+).*" \
| rex field=Message "\\\Files.*\\\(?P<filename_from_message>.+)\s\w+," \
| eval File=if(File=="",filename_from_message,File) \
| eval File=case(like(File,"%csv"),rtrim(File,".csv"),like(File,"%txt"),rtrim(File,".txt")) \
| rex field=File "_(?<date_from_logs>\d+_*\d*_*\d*)" \
| rex field=File "(?P<File>[^\\\]+)$" \
| eval date_from_logs = if(match(date_from_logs,"_"),strptime(date_from_logs,"%Y_%m_%d"),strptime(date_from_logs,"%Y%m%d")) \
| eval log_filename_date=strptime(log_filename_date,"%Y%m%d") \
| eval diff=round((date_from_logs - log_filename_date)/86400) \
| eval date_from_logs=strftime(date_from_logs,"%F") \
| eval log_filename_date=strftime(log_filename_date,"%F") \
| eval filePath=source \
| eval source=case(like(source,"%SecureTransport\Logs_Status%"),"Employees",like(source,"%SecureTransportDownloadAbsence\Logs_Status%"),"Download Absence",like(source,"%SecureTransportUploadAbsence\Logs_Status%"),"Upload Absence Letters",like(source,"%SecureTransportUploadAbsence_File1\Logs_Status%"),"Upload Absence file 1",like(source,"%SecureTransportUploadAbsence_File2\Logs_Status%"),"Upload Absence file 2",like(source,"%SecureTransportUploadAbsence_File3\Logs_Status%"),"Upload Absence file 3",like(source,"%SecureTransportAbs\Logs_Status%"),"SecureTransportAbs",like(source,"%SecureTransportRTW\Logs_Status%"),"SecureTransportRTW",like(source,"%SecureTransportUpload\Logs_Status%"),"Upload AMS",like(source,"%SecureTransportUpload_File1\Logs_Status%"),"Upload AMS_1",like(source,"%SecureTransportUpload_File2\Logs_Status%"),"Upload AMS_2",like(source,"%SecureTransportUpload_File3\Logs_Status%"),"Upload AMS_3",like(source,"%SecureTransportUploadAbsenceLetter\Logs_Status%"),"Upload Absence Letters",like(source,"%SecureTransportUploadAbsenceTimeData\Logs_Status%"),"Upload Absence Time Data",like(source,"%AMS_Absences_Day1_File1\Logs_Status%"),"Upload AMS Absences Day1 File1",like(source,"%AMS_Absences_Day1_File2\Logs_Status%"),"Upload AMS Absences Day1 File2",like(source,"%AMS_Absences_Day1_File3\Logs_Status%"),"Upload AMS Absences Day1 File3",like(source,"%AMS_Absences_Day1_File4\Logs_Status%"),"Upload AMS Absences Day1 File4",like(source,"%AMS_Absences_Day1_File5\Logs_Status%"),"Upload AMS Absences Day1 File5",like(source,"%AMS_Clocking_File1\Logs_Status%"),"AMS Clocking File1",like(source,"%AMS_Clocking_File2\Logs_Status%"),"AMS Clocking File2",like(source,"%AMS_Clocking_File3\Logs_Status%"),"AMS Clocking File3",like(source,"%AMS_Clocking_File4\Logs_Status%"),"AMS Clocking File4",like(source,"%AMS_Clocking_File5\Logs_Status%"),"AMS Clocking File5",like(source,"%AMS_Employee_Absences\Logs_Status%"),"Upload AMS Employee Absences",like(source,"%SecureTransportBingo\Logs_Status%"),"Bingo",like(source,"%SecureTransportEmployees\Logs_Status%"),"Employees",like(source,"%SecureTransportTNEmployees\Logs_Status%"),"Transnational Employees",like(source,"%SecureTransportUploadLetters\Logs_Status%"),"Upload Letters") \
| lookup file_transfer_lookup.csv file_transfer_name AS source OUTPUTNEW day_difference \
| eval day_difference=mvdedup(day_difference) \
| eval File_Status=if((day_difference==diff),"OK","KO") \
| eval status=case(like(Message,"%complete%"),"OK",((((File == "") OR (File == " ")) AND isnull(status)) OR (File_Status == "KO")),"Error",like(Message,"%error%"),"Error",(File_Status == "OK"),"OK") \
| eval Day= Date." ".Time \
| fillnull value="Warning" status \
| table Day natco date_from_logs status Message day_difference diff source filePath File_Status File 
iseval = 0

##################################
# INFRASTRUCTURE DASHBOARD MACROS
##################################

[ams_report_db_server]
definition =search eventtype=x620_ams_server_ip (url="10.123.48.52") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_server_fr]
definition = search eventtype=x620_ams_server_ip (url="10.125.88.154") OR (url="10.125.88.155") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_server_sp]
definition = search eventtype=x620_ams_server_ip (url="10.125.88.158") OR (url="10.125.88.159") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_server_uk]
definition = search eventtype=x620_ams_server_ip (url="10.125.88.160") OR (url="10.125.88.161") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_server_ge]
definition = search eventtype=x620_ams_server_ip (url="10.125.88.156") OR (url="10.125.88.157") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_db_server]
definition = search eventtype=x620_ams_server_ip (url="10.123.48.51") \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP")
iseval = 0

[ams_ips_server]
definition = search eventtype=x620_ams_server_ip \
| eval resultcode=if(like(msg,"%down%"),"DOWN","UP") \
| eval natco=case(url="10.125.88.154","FR",url="10.125.88.155","FR",url="10.125.88.158","SP",url="10.125.88.159","SP",url="10.125.88.156","GE",url="10.125.88.157","GE",url="10.125.88.160","UK",url="10.125.88.161","UK",url="10.123.48.52","AMS REPORT DB",url= "10.123.48.51","AMS DB") \
| stats last(resultcode) as Status latest(_time) as Time values(natco) as Natco values(host) as Host by url \
| eval Time = strftime(Time,"%F %H:%M:%S") \
| rename url as IP  
iseval = 0

[website_status]
definition = search eventtype=x620_ams_web_ping \
| lookup web_ping_urls.csv url as url OUTPUT title \
| fillnull response_code value="Connection failed" \
| eval response_code=if((response_code == ""),"Connection failed",response_code), response_code=if((timed_out == "True"),"Connection timed out",response_code) \
| fillnull has_expected_string value="" \
| eval response_code=((response_code . " ") . has_expected_string) \
| stats avg(total_time) as avg_response_time latest(response_code) as response_code latest(title) as title latest(total_time) as response_time by url \
| eval response_time=round(response_time,0), response=response_code \
| eval natco= case(like(url,"%FR%"),"FR",like(url,"%UK%"),"UK",like(url,"%ES%"),"SP",like(url,"%GE%"),"GE") \
| table natco title url response_code \
| rename natco as Server title as Title url as Link response_code as Status 
iseval = 0

[service_status]
definition = search eventtype=x620_ams_win_perform Type=Service \
| eval natco="GE,FR,UK,SP" \
| makemv delim="," natco \
| mvexpand natco \
| lookup service_list natco as natco OUTPUT service_list \
| mvexpand service_list \
| eval exist=if(like(State,"%Running%"),1,0) \
| stats latest(_time) as _time values(State) as Status values(exist) as exist values(host) as Host values(Description) as "Status Message" by DisplayName service_list natco \
| where DisplayName==service_list \
| eval _time = strftime(_time,"%F %H:%M:%S") \
| table _time DisplayName natco Status "Status Message"
iseval = 0

[calltree_status]
definition = search eventtype=x620_ams_win_perform Type=Service \
| eval natco="GE,FR,UK,SP" \
| makemv delim="," natco \
| mvexpand natco \
| lookup service_list natco as natco OUTPUT service_list \
| mvexpand service_list \
| stats latest(_time) as _time values(State) as Status values(host) as Host values(Description) as "Status Message" by DisplayName service_list natco \
| where DisplayName==service_list \
| eval _time = strftime(_time,"%F %H:%M:%S") \
| eval callTree=if((DisplayName=="Blacklight AMS UK DDCT" and Status=="Running") AND (DisplayName=="DHCP Client" and Status=="Running") AND (DisplayName=="Dialogic HMP License Manager" and Status=="Running") AND (DisplayName=="Dialogic Runtime Tracing Dispatcher" and Status=="Running") AND (DisplayName=="Dialogic System Service" and Status=="Running") AND (DisplayName=="RuntimeManager" and Status=="Running"),"OK","KO") \
| eval callTreeFR = if( callTree=="OK" AND (DisplayName=="Nuance Speech Server" and Status=="Running") AND (DisplayName=="NuanceLicensingService" and Status=="Running"),"OK","KO") \
| table _time callTree callTreeFR DisplayName natco Status "Status Message" \
| rename DisplayName as Services natco as Natcos _time as Days \
| table Days Natcos Services Status "Status Message" 
iseval = 0

[ams_cpu_status]
definition = search eventtype=x620_ams_win_perform object = Processor counter="% Processor Time" \
| timechart span=1h avg(Value) as CPU \
| eval CPU=round(CPU,3) \
| where isnotnull(CPU)
iseval = 0

[ams_processor_status]
definition = search eventtype=x620_ams_win_perform object=Processor counter="% User Time" \
| timechart span=1h avg(Value) as CPU \
| eval CPU=round(CPU,3) \
| where isnotnull(CPU)
iseval = 0


[ams_cpu_detailed_status]
definition = search eventtype=x620_ams_win_perform object = Processor counter="% Processor Time" \
| bucket span=1d _time \
| stats avg(Value) as avgcpu by _time host \
| timechart span=1d  eval(round(avg(avgcpu),2)) as "CPU Processor Time" by host limit=0
iseval = 0

[ams_disk_status]
definition = search eventtype=x620_ams_win_perform object = LogicalDisk counter="Free Megabytes" \
| eval Value=round(Value/1024,2) \
| where isnotnull(Value)|stats first(Value) as " "
iseval = 0

[ams_disk_space_availablity_trend]
definition = search eventtype=x620_ams_win_perform object = Processor counter="% Processor Time" \
|eval Value=100-Value \
| timechart span=1h avg(Value) as Disk \
| eval Disk=round(Disk,3) \
| where isnotnull(Disk)
iseval = 0


[ams_disk_availablity]
definition = search eventtype=x620_ams_win_perform object = LogicalDisk counter="Free Megabytes" \
| eval Value=round(Value/1024,1) \
| where isnotnull(Value) \
| timechart span=1d last(Value) as "Free Space" \
| head 100
iseval = 0

##US 62 MARCOS##

[ams_get_us_62_registrations]
definition = search index=ai-x620-ams sourcetype=x620:ams:dbCalls \
| eval Day= strptime(CallDate,"%Y-%m-%d") \
| append \
    [ search index=ai-x620-ams sourcetype=x620:ams:dbCalls \
    | eval Day=strptime(LogDate,"%Y-%m-%d") \
        ] \
| eval _time=Day \
| timechart span=1mon count(CallID) as CallID_TO count(LoggedCallID) as LoggedCallID_SR \
| eval IR= CallID_TO-LoggedCallID_SR \
| rename IR as "Number of  registrations interrupted" CallID_TO as "Total number of calls" LoggedCallID_SR as "Number successful registrations"
iseval = 0

[ams_get_us_62_call_forward(1)]
args = SortBY
definition = search index="ai-x620-ams" sourcetype="x620:ams:calltree" "Transfer number to dial:" \
| spath \
| timechart span=$SortBY$ count(LogFile.LogItem.Message) as "Number of calls forwarded to managers for Germany"
iseval = 0

[ams_get_us_62_call_forward_OH(1)]
args = SortBY
definition = search index="ai-x620-ams" sourcetype="x620:ams:calltree" "Call forwarded via outbound channel 31" \
| spath \
| timechart span=$SortBY$ count(LogFile.LogItem.Message) as "Number of calls forwarded to OH for Germany"
iseval = 0

[ams_calltree_number_of_call_fr(1)]
args = sortBy_fr
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbCalls source="x620-airbuscontractFR-inputus39" \
| timechart count(_time) AS Call_Number span=$sortBy_fr$
iseval = 0

[ams_calltree_number_of_call_ge(1)]
args = sortBy_ge
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbCalls source="x620-airbuscontractGE-inputus39" \
| timechart count(_time) AS Call_Number span=$sortBy_ge$
iseval = 0

[ams_calltree_number_of_call_sp(1)]
args = sortBy_sp
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbCalls source="x620-airbuscontractSP-inputus39" \
| timechart count(_time) AS Call_Number span=$sortBy_sp$
iseval = 0

[ams_calltree_number_of_call_uk(1)]
args = sortBy_uk
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbCalls source="x620-airbuscontractUK-inputus39" \
| timechart count(_time) AS Call_Number span=$sortBy_uk$
iseval = 0

[ams_get_number_of_esclation(1)]
args = SortBY
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees source="x620-airbuscontractUK-inputUS54" \
| timechart count(EmployeeID) span=$SortBY$ by StageID \
| rename 2 as "Stage 1" \
| rename 3 as "Stage 2" \
| rename 4 as "Stage 3" \
| rename 5 as "Informal Discussion" \
| rename 6 as "Pre Dismissal"
iseval = 0

[ams_get_number_of_OPASRestriction]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAdviceNotes source="x620-airbuscontractUK-inputUS56" IsValid=1
iseval = 0

[Absence_report]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontractFR-inputus46" OR  source="x620-airbuscontractUK-inputus46" OR  source="x620-airbuscontractSP-inputus46" OR  source="x620-airbuscontractGE-inputus46" \
|table Natco, nbSMS, nbcalls, nbAbsOpened, nbAbsClosed
iseval = 0

[ams_cumulated_sms]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontractFR-inputUS5051" OR source="x620-airbuscontractSP-inputUS5051" OR source="x620-airbuscontractGE-inputUS5051" OR source="x620-airbuscontractUK-inputUS5051" \
| table *
iseval = 0

[ams_number_of_sms(2)]
args = select_natco, sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputUS5051" \
| table _time DateSent DateInitialReturnToworkExtended \
| fillnull value=NULL DateSent \
| search DateSent!=Null \
| timechart count as AbsenceCreation span=$sort_by$ \
| join _time [search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputUS5051" date1 &lt; "0" \
| fillnull value=NULL DateSent \
| search DateSent!=Null \
|timechart count(_time) AS "AbsenceUpdate" span=$sort_by$]
iseval = 0

[ams_number_of_sms_fr(2)]
args = select_natco, sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputUS5051" \
| fillnull value=NULL DateSent \
| search DateSent!=Null \
| timechart count as AbsenceCreation span=$sort_by$ \
| join _time [search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputUS5051" DateInitialReturnToworkExtended="1" \
| fillnull value=NULL DateSent \
| search DateSent!=Null \
| timechart count(_time) AS "AbsenceUpdate" span=$sort_by$]
iseval = 0

[ams_absence(1)]
args = select_natco
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontract$select_natco$-inputUS40" \
| table _time EmployeeID DateInitialReturnToWork ClosedDate DateEndTime DateStartTime DateInitialReturnToWork DateInitialReturnToWorkExtended
iseval = 0

[ams_activated_account(2)]
args = select_natco, Division
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees source="x620-airbuscontract$select_natco$-inputUS12" NWDeleted="0" Siglum=$Division$ \
| table _time EmployeeID NWDeleted Siglum
iseval = 0

[ams_deactivated_account(2)]
args = select_natco, Division
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees source="x620-airbuscontract$select_natco$-inputUS12" NWDeleted="1" Siglum=$Division$ \
| table _time EmployeeID NWDeleted Siglum
iseval = 0

[ams_doublons_on_activated_account(2)]
args = select_natco, Division
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees  source="x620-airbuscontract$select_natco$-inputUS12" NWDeleted="1" Siglum=$Division$ sapno \
| table _time EmployeeID NWDeleted Siglum
iseval = 0

[ams_doublons_on_deactivated_account(2)]
args = select_natco, Division
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees source="x620-airbuscontract$select_natco$-inputUS12" NWDeleted="1" Siglum=$Division$ sapno \
| table _time EmployeeID NWDeleted Siglum
iseval = 0

[ams_division(1)]
args = select_natco
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbEmployees source="x620-airbuscontract$select_natco$-inputUS12" \
| stats values(Siglum) AS Division \
| mvexpand Division
iseval = 0

[ams_computerName_list]
definition = search eventtype=x620_ams_win_perform Type=Service \
|stats values(ComputerName) as ComputerName
iseval = 0

[ams_connexion-TA-account(3)]
args = Server, sort_by, Connections_Threshold
definition = search index="ai-x620-ams" sourcetype="x620:ams:security" Account_Name!="-" "computername=$Server$" \
|mvexpand Account_Name \
| eval id=toString(EventCode)."#".toString(Account_Name) \
| timechart dc(id) span=$sort_by$ by Account_Name \
| eval Connections_Threshold=$Connections_Threshold$
iseval = 0

[ams_error_on_rtw(2)]
args = select_natco,sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontract$select_natco$-inputUS30"  \
| eval error1 = case(DateInitialReturnToWork < DateStartTime,"ok" ) \
| eval error2 = case(DateEndTime < DateStartTime,"ok") \
| eval error4 = case(isnotnull(DateEndTime) and isnotnull(DateInitialReturnToWork) and DateInitialReturnToWork > strftime(now(),"%Y-%m-%d %H:%M:%S.%Q"),"ok") \
| eval error3 = case(DateInitialReturnToWork > strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") and RTWDetailStatusID="2" and isnotnull(DateInitialReturnToWork),"ok")  \
| timechart  count(error1) as "DateInitialReturnToWork errors" count(error2) as "DateEndTime errors " count(error3) as "DateInitialReturnToWork exceed " count(error4) as "DateEndTime exceed" span=$sort_by$
iseval = 0

[ams_rtw_number(1)]
args = select_natco
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbReturnToWork source="x620-airbuscontract$select_natco$-inputUS60"  \
| eval open = case(RTWDetailStatusID = 1,"ok" ) \
| eval complete = case (RTWDetailStatusID = 2 ,"ok") \
| eval close = case(RTWDetailStatusID = 3 ,"ok")
iseval = 0

[ams_delegation_consistency(2)]
args = select_natco,sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbDelegation source="x620-airbuscontract$select_natco$-inputUS58" \
 | eval pending = case(DelegationStatusID=1,"ok" ) \
 | eval accepted = case(DelegationStatusID=2,"ok" ) \
 | eval rejected = case(DelegationStatusID=3,"ok" ) \
 | eval deleted = case(DelegationStatusID=4,"ok" )  \
 | timechart  count(pending) as "Pending" count(accepted) as "Accepted" count(rejected) as "Rejected " count(deleted) as "Deleted" span=$sort_by$
iseval = 0

[ams_delegation_with_pending_status(2)]
args = select_natco, sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputus45" \
| rex "\<iBusinessEvent\>(?<val>[^\<]+)" \
| eval absence_creation = case(val=100 and Sent=0 and isnull(DateSent),MessageID) \
| eval absence_update = case(val=101 and Sent=0 and  isnull(DateSent),MessageID) \
| timechart dc(absence_creation) as "Notifications not sent on Absence Creation"  dc(absence_update) as "Notifications not sent after Absence update" span=$sort_by$
iseval = 0

[ams_notification_not_sent(2)]
args = select_natco,sort_by
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputus45" \
| rex "\<iBusinessEvent\>(?<val>[^\<]+)" \
| eval absence_creation = case(val=100 and Sent=0 and isnull(DateSent),MessageID) \
| eval absence_update = case(val=101 and Sent=0 and  isnull(DateSent),MessageID) \
| timechart dc(absence_creation) as "Notifications not sent on Absence Creation"  dc(absence_update) as "Notifications not sent after Absence update" span=$sort_by$
iseval = 0

[ams_reminder_notification(1)]
args = select_natco
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbMessages source="x620-airbuscontract$select_natco$-inputus45"  \
| rex "MessageType=\"(?<MessageTypeVal>[^\"]+)" \
| eval Sent=1 \
| table  MessageTypeVal MessageID _time  \
| where like(MessageTypeVal,"%EMail%") 
iseval = 0

###########################
## SAVED SEARCHES MACROS ##
###########################

[ams_get_dateendtime_errors_by_mail]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontractFR-inputUS30" OR source="x620-airbuscontractUK-inputUS30" OR source="x620-airbuscontractGE-inputUS30" OR source ="x620-airbuscontractSP-inputUS30" \
| eval Natco = split(mvindex(split(source,"-"),1),"airbuscontract") \
| table AbsenceID RTWDetailID EmployeeID Natco DateEndTime DateStartTime RTWDetailStatusID \
| where DateEndTime < DateStartTime
iseval = 0


[ams_get_dateinitialreturntowork_exceed_by_mail]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontractFR-inputUS30" OR source="x620-airbuscontractUK-inputUS30" OR source="x620-airbuscontractGE-inputUS30" OR source ="x620-airbuscontractSP-inputUS30" \
| eval Natco = split(mvindex(split(source,"-"),1),"airbuscontract") \
| table AbsenceID RTWDetailID EmployeeID Natco DateInitialReturnToWork DateStartTime RTWDetailStatusID \
| where DateInitialReturnToWork > strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") and isnotnull(DateInitialReturnToWork) and RTWDetailStatusID="2"
iseval = 0

[ams_get_dateinitialreturntowork_errors_by_mail]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontractFR-inputUS30" OR source="x620-airbuscontractUK-inputUS30" OR source="x620-airbuscontractGE-inputUS30" OR source ="x620-airbuscontractSP-inputUS30" \
| eval Natco = split(mvindex(split(source,"-"),1),"airbuscontract") \
| table AbsenceID RTWDetailID EmployeeID Natco DateInitialReturnToWork DateStartTime RTWDetailStatusID \
| where DateInitialReturnToWork < DateStartTime
iseval = 0

[ams_get_dateendtime_exceed_by_mail]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbAbsences source="x620-airbuscontractFR-inputUS30" OR source="x620-airbuscontractUK-inputUS30" OR source="x620-airbuscontractGE-inputUS30" OR source ="x620-airbuscontractSP-inputUS30" \
| eval Natco = split(mvindex(split(source,"-"),1),"airbuscontract") \
| table AbsenceID RTWDetailID EmployeeID Natco DateInitialReturnToWork DateStartTime DateEndTime RTWDetailStatusID \
| where DateInitialReturnToWork > strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") and isnotnull(DateInitialReturnToWork) and isnotnull(DateEndTime)
iseval = 0

[ams_delegation_alerting_FR]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbDelegation source="x620-airbuscontractFR-inputUS58" \
| where DelegationStatusID =1 AND StartDate < strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") \
| table  ID  StartDate  EndDate   \
| rename ID as "Delegation Id", StartDate as "Start Date", EndDate as "End Date"
iseval = 0

[ams_delegation_alerting_ES]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbDelegation source="x620-airbuscontractSP-inputUS58" \
| where DelegationStatusID =1 AND StartDate < strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") \
| table  ID  StartDate  EndDate   \
| rename ID as "Delegation Id", StartDate as "Start Date", EndDate as "End Date"
iseval = 0

[ams_delegation_alerting_UK]
definition = search index="ai-x620-ams" sourcetype=x620:ams:dbDelegation source="x620-airbuscontractUK-inputUS58" \
| where DelegationStatusID =1 AND StartDate < strftime(now(),"%Y-%m-%d %H:%M:%S.%Q") \
| table  ID  StartDate  EndDate   \
| rename ID as "Delegation Id", StartDate as "Start Date", EndDate as "End Date"
iseval = 0