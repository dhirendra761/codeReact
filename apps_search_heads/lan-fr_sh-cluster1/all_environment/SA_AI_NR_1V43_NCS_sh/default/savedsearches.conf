
[evolution per time]
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events"]
display.events.rowNumbers = 1
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.custom.type = status_indicator_app.status_indicator
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_BDE_Interface_not_exported_clockings | timechart avg(nb_events)

[Number of non exported clocking]
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events"]
display.events.rowNumbers = 1
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.axisTitleX.text = date
display.visualizations.charting.axisTitleY.text = number of non exported clocking
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.chart.showDataLabels = all
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.charting.legend.placement = none
display.visualizations.custom.type = status_indicator_app.status_indicator
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_APD_Interface_not_exported_event \
| timechart avg(nb_events)

[NCS_BDE_NOT_Exported]
dispatch.earliest_time = rt-1m
dispatch.latest_time = rtnow
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.charting.chart = line
display.visualizations.singlevalue.rangeColors = ["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_BDE_Interface_not_exported_clockings\
| stats count by tags \
| fields - tags

[NCS BDE_Interface not exported clockings]
description = Check the presence of clocking events not sent in the interface tables
dispatch.earliest_time = rt-1m
dispatch.latest_time = rt
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.charting.chart = line
display.visualizations.singlevalue.colorMode = block
display.visualizations.singlevalue.rangeColors = ["0x53a051","0xdc4e41"]
display.visualizations.singlevalue.rangeValues = [0.5]
display.visualizations.singlevalue.underLabel = were not exported in BDE
display.visualizations.singlevalue.unit = events
display.visualizations.singlevalue.useColors = 1
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_BDE_Interface_not_exported_clockings \
 | table nb_events, @timestamp

[Evolution of non exported clocking]
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events"]
display.events.rowNumbers = 1
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.axisTitleX.text = date
display.visualizations.charting.axisTitleY.text = number of non exported clocking
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = zero
display.visualizations.charting.chart.showDataLabels = all
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.charting.legend.placement = none
display.visualizations.custom.type = status_indicator_app.status_indicator
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_BDE_Interface_not_exported_clockings | timechart avg(nb_events)

[BDE not exported clocking]
description = Number of clocking events not sent in BDE
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.singlevalue.colorMode = block
display.visualizations.singlevalue.rangeColors = ["0x53a051","0xdc4e41"]
display.visualizations.singlevalue.rangeValues = [0]
display.visualizations.singlevalue.underLabel = were not exported in APD
display.visualizations.singlevalue.unit = events
display.visualizations.singlevalue.useColors = 1
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_APD_Interface_not_exported_event \
| table nb_events @timestamp

[last export ago]
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* \
| stats latest(_time) as last_seen | eval days_since = (now() - last_seen)  | eval duration_since =strftime(days_since, "%d days %Hh:%Mm:%Ss")

[last import PHM/Xatlas]
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*\
| stats last(date_extraction) as "Later import"

[test scheduling]
description = Number of clocking events not sent in BDE
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.singlevalue.colorMode = block
display.visualizations.singlevalue.rangeColors = ["0x53a051","0xdc4e41"]
display.visualizations.singlevalue.rangeValues = [0]
display.visualizations.singlevalue.underLabel = were not exported in APD
display.visualizations.singlevalue.unit = events
display.visualizations.singlevalue.useColors = 1
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_APD_Interface_not_exported_event \
| table nb_events @timestamp

[SAP Import 3 - History]
description = History of the third SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype="logstash-plain-10" date_hour >= 16 date_hour <= 18 \
| timechart count per_day() \
| eval Result=if(count=0, "Not run", "OK") \
| fields + _time Result\
| sort by _time desc

[SAP Import 2 - History]
description = History of the second SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype="logstash-plain-10" date_hour >= 12 date_hour <= 13 \
| timechart count per_day() span=1d\
| eval Result=if(count=0, "Not run", "OK") \
| fields + _time Result\
| sort by _time desc

[second test demain]
action.email = 1
action.email.message.alert = test
action.email.priority = 2
action.email.to = loic.mangin@soprasteria.com
alert.digest_mode = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
alert_condition = search nb_events>0
counttype = custom
cron_schedule = */10 * * * *
dispatch.earliest_time = -10m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_APD_Interface_not_exported_event| head 1| table _time, nb_events



[SAP Import 1 - History]
description = History of the first SAP import of the day
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log date_hour >= 6 date_hour <= 9 | search tags=NCS_Import_Person_Failed_number  sourcetype=watchdogng* | timechart  count per_day() span=1d  | eval  Result=if(count=0, "Not run", "OK")  | fields  + _time Result  | sort  by _time desc

[SAP Import 1 - History_2]
description = History of the first SAP import of the day
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*  | search tags= "NCS_XAtlas_PHM_Imports" date_hour >= 6 date_hour <= 9 \
| timechart count per_day() span=1d\
| eval Result=if(count=0, "Not run", "OK")\
| fields + _time Result

[SAP Import 2 - History_2]
description = History of the second SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags= "NCS_XAtlas_PHM_Imports" date_hour >= 12 date_hour <= 13 \
| timechart count per_day() span=1d\
| eval Result=if(count=0, "Not run", "OK") \
| fields + _time Result\
| sort by _time desc

[list of KO devices]
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log  sourcetype=NCSping result="PING KO" \
| table _time, IP, ClockMachine

[not exported event Xatlas/PHM]
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags=NCS_XAtlas_PHM_Imports \
|  table not_exported_event, @timestamp

[SAP import 1 (final)]
description = History of the first SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 4 date_hour < 9 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| table Day Result

[SAP import 2 (final)]
description = History of the second SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 9 date_hour < 14 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| table Day Result

[SAP Import 3]
description = History of the third SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 14 date_hour < 19 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| table Day Result

[Statistics export Xatlas to SAP PHM]
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.singlevalue.rangeColors = ["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags=NCS_XAtlas_PHM_Imports \
|  timechart values(not_exported_event)

[Summary of rejected employees from the IT50 (good one 2)]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*\
| search tags=NCS_Import_Person_Failed_number| convert ctime(_time) timeformat="%d/%m/%y %H:%M:%S" | table _time, NCS_ImportSummary_nbUserNotImported \
| dedup  NCS_ImportSummary_nbUserNotImported, _time  \
| rename NCS_ImportSummary_nbUserNotImported as "Number of rejected employees" , _time as "date of the report"

[Summary of rejected employees from the IT50 (good one)]
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*\
| search tags=NCS_Import_Person_Failed_number\
| sort -_time\
| convert ctime(_time) timeformat="%d/%m/%y %H:%M:%S"\
| table _time, NCS_ImportSummary_nbUserNotImported\
| dedup  NCS_ImportSummary_nbUserNotImported, _time\
| rename NCS_ImportSummary_nbUserNotImported as "Number of rejected employees" , _time as "Date of the report"

[US 12- Number of rejected employees and date of report]
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log NCS_ImportSummary_nbUserNotImported \
| table NCS_ImportSummary_nbUserNotImported, NCS_temp_timestamp| dedup  NCS_ImportSummary_nbUserNotImported, NCS_temp_timestamp \
| rename NCS_ImportSummary_nbUserNotImported as "Number of rejected employees" , NCS_temp_timestamp as "date of the report"

[SAP Import 3 - History_2]
description = History of the third SAP import of the day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags= "NCS_XAtlas_PHM_Imports" date_hour >= 16 date_hour <= 18 \
| timechart count per_day() \
| eval Result=if(count=0, "Not run", "OK") \
| fields + _time Result\
| sort by _time desc

[Summary of rejected employees from the IT50 (good one 3)]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*\
| search tags=NCS_Import_Person_Failed_number| convert ctime(_time) timeformat="%d/%m/%y %H:%M:%S" | table _time, NCS_ImportSummary_nbUserNotImported \
| dedup  NCS_ImportSummary_nbUserNotImported, _time  \
| rename NCS_ImportSummary_nbUserNotImported as "Number of rejected employees" , _time as "Date of the report"

[Summary of rejected employees from the IT50]
description = Number of rejected employees per date
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = minMidMax
display.statistics.format.0.colorPalette.maxColor = #EC9960
display.statistics.format.0.colorPalette.minColor = #FFFFFF
display.statistics.format.0.field = Number of rejected employees
display.statistics.format.0.scale = minMidMax
display.statistics.format.0.scale.maxValue = 37
display.statistics.format.0.scale.minValue = 0
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags="NCS_Import_Person_Failed_number" | convert ctime(_time)| table _time, NCS_ImportSummary_nbUserNotImported | dedup  NCS_ImportSummary_nbUserNotImported, _time  | rename NCS_ImportSummary_nbUserNotImported as "Number of rejected employees" , _time as "date of the report"

[US 12 daily report of rejected employees from the IT50]
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*| spath tags | search tags=NCS_Import_Person_Failed \
| table @timestamp, NCS_Import_Error_Message, NCS_Import_Id, NCS_Import_Name \
| rename @timestamp as "date", NCS_Import_Error_Message as "error message",  NCS_Import_Id as "ID", NCS_Import_Name as "name"

[export Xatlas PHM good request]
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = visualizations
display.page.search.mode = fast
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* \
| stats  latest(_time) AS latest_time| convert ctime(latest_time)

[Morning PHM-Xatlas imports]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "Morning PHM-Xatlas imports" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.to = loic.mangin@soprasteria.com
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
alert_condition = search Result="Not run"
counttype = number of events
cron_schedule = 0 8 * * *
description = History of the first SAP import of the day
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
enableSched = 1
quantity = 1
relation = less than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 4 date_hour <= 8 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| head 1\
| table Day Result

[APD alert]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "exporting clockings in APD" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject.alert = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
action.email.useNSSubject = 1
action.lookup = 1
action.lookup.append = 1
action.lookup.filename = APD.csv
alert.digest_mode = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
alert_condition = search nb_events>0
counttype = custom
cron_schedule = */10 * * * *
description = Alert sent if number greater than 0
dispatch.earliest_time = -10m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* tags=NCS_APD_Interface_not_exported_event| head 1| table _time, nb_events

[BDE alert]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "exporting clockings in BDE" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
action.lookup = 1
action.lookup.filename = BDE_alert.csv
alert.digest_mode = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
alert_condition = search nb_events>0
counttype = custom
cron_schedule = */10 * * * *
dispatch.earliest_time = -10m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*   tags=NCS_BDE_Interface_not_exported_clockings \
| head 1| table _time, nb_events

[End of day PHM-Xatlas import]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "End of day PHM-Xatlas import" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
alert_condition = search Result="Not run"
counttype = number of events
cron_schedule = 0 17 * * *
description = History of the third SAP import of the day
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
enableSched = 1
quantity = 1
relation = less than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 15 date_hour <= 17 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| head 1\
| table Day Result

[Mid Day PHM-Xatlas imports]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "Mid Day PHM-Xatlas imports" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
alert_condition = search Result="Not run"
counttype = number of events
cron_schedule = 0 13 * * *
description = History of the second SAP import of the day
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"OK":#B6C75A,"Not run":#DC4E41}
display.statistics.format.0.field = Result
display.visualizations.charting.chart = area
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.show = 0
enableSched = 1
quantity = 1
relation = less than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* |  search tags= NCS_Import_Person_Failed_number date_hour >= 10 date_hour <= 13 \
| timechart count per_day() span=1d\
|  convert ctime(_time) as Day timeformat=%d/%m/%y \
| eval Result=if(count=0, "Not run", "OK") \
| fields + Day Result \
| sort by _time desc\
| head 1\
| table Day Result

[NCS Clocking Event Delay]
action.email = 1
action.email.cc = loic.mangin@soprasteria.com
action.email.message.alert = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$ \
The job "event clock delay" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject.alert = [Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = romain.caralp@soprasteria.com
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
alert_condition = search nb_events>0
counttype = custom
cron_schedule = 0 * * * *
dispatch.earliest_time = -10m
dispatch.latest_time = @m
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng* | search tags="NCS_Clocking_Event_Delay" \
| head 1 | table _time, nb_events

[Xatlas-PHM imports]
action.email = 1
action.email.cc = olivier.zoccarato@soprasteria.com
action.email.message.alert = The job "Xatlas-PHM imports" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.priority = 2
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 0
alert.track = 1
alert_condition = search not_exported_event>0
counttype = custom
cron_schedule = */10 * * * *
description = Clocking events registered by the clocking devices shall be sent every 10min to PHM. Any delay in sending these events needs to be noticed as that means there is an issue in the end2end workflow.
dispatch.earliest_time = -10m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log sourcetype=watchdogng*| search tags=NCS_XAtlas_PHM_Imports \
|head 1| table _time, not_exported_event


[Clockings alert]
action.email = 1
action.email.message.alert = The job "Clocking machine" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject.alert = “[Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 15 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = status_indicator_app.status_indicator
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = tags=NCSPing sourcetype=watchdogng* index=ai-platform-watchdogng-log   result=KO  name!=FR*  name!=GE* |convert ctime(_time) as Time timeformat="%d/%m/%y %H:%M:%S"   | table  Time, ipaddress, name, result   | dedup  name

[Silent Clocking during more than 8 hours]
action.email = 1
action.email.message.alert = he job "no clocking during more than 8 hours" has failed\
\
---------------------------------------------------------\
\
CFB - Watch Dog NG Alerter - Sopra Steria
action.email.sendcsv = 1
action.email.sendpdf = 1
action.email.sendresults = 1
action.email.subject.alert = [Watch Dog NG][1N36 – NCS]  Splunk Alert: $name$
action.email.to = loic.mangin@soprasteria.com
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 10 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","date","time","nb_events","not_exported_event","NCS_ImportSummary_nbUserNotImported","NCS_temp_timestamp"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.mode = fast
display.page.search.patterns.sensitivity = 0.75
display.page.search.tab = statistics
display.visualizations.charting.legend.labelStyle.overflowMode = ellipsisEnd
display.visualizations.custom.type = viz_halo.halo
display.visualizations.type = custom
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = monitoring_ncs
request.ui_dispatch_view = search
search = index=ai-platform-watchdogng-log tags=NCS_last_clocking |eval test= replace(last_clocking, "-","/")|eval test2=replace(test,"[.]",":")|table name, test2, last_clocking_age_in_hours | rename name as "Name", test2 as "Date of the last clocking", last_clocking_age_in_hours as "Duration in hours since the last badging"|dedup Name |sort by "Duration in hours since the last badging" desc
